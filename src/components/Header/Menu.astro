---
import { Menu as MenuIcon } from "lucide-astro";
import NavItems from "./NavItems.astro";
import Button from "../button/Button.astro";

const { tNav, tCta } = Astro.props;
---

<div class="lg:hidden grid place-content-center">
  <button
    id="button-menu"
    aria-label="Menu"
    title="Menu"
    aria-expanded="false"
    aria-controls="menu-mobile"
  >
    <MenuIcon class="size-9 text-secondary" />
  </button>

  <nav
    id="menu-mobile"
    class="hidden lg:hidden gap-10 list-none px-8 py-8 pb-14 rounded-2xl border border-white bg-white/70 backdrop-blur-lg absolute top-20 right-8 w-full max-w-[220px] animate-fade-in"
    aria-expanded="false"
    aria-labelledby="button-menu"
  >
    <ul class="space-y-4 w-full">
      <NavItems tNav={tNav} />
      <li>
        <Button
          variant="secondary"
          className="px-8 min-[390px]:hidden w-full"
          href="#contact"
        >
          {tCta.contact}
        </Button>
      </li>
    </ul>
  </nav>
</div>

<script>
  const buttonMenu = document.getElementById(
    "button-menu"
  ) as HTMLButtonElement;
  const menuMobile = document.getElementById("menu-mobile") as HTMLElement;
  let isOpen = false;

  buttonMenu.addEventListener("click", () => {
    isOpen = !isOpen;

    if (isOpen) {
      buttonMenu.setAttribute("aria-expanded", "true");
      menuMobile.setAttribute("aria-expanded", "true");
    } else {
      buttonMenu.setAttribute("aria-expanded", "false");
      menuMobile.setAttribute("aria-expanded", "false");
    }

    menuMobile.style.display = isOpen ? "block" : "none";
  });

  window.addEventListener("click", (event) => {
    if (window.innerWidth >= 1024) return;
    if (
      (isOpen && (event.target as HTMLElement)?.closest("#button-menu")) ||
      (!isOpen && (event.target as HTMLElement)?.closest("#menu-mobile"))
    )
      return;

    buttonMenu.setAttribute("aria-expanded", "false");
    menuMobile.setAttribute("aria-expanded", "false");
    isOpen = false;
    menuMobile.style.display = "none";
  });
</script>
