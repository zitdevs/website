---
import { cn } from "src/lib/utils";
import { CheckCircle, XCircle , ChevronRight } from "lucide-astro";
import { getI18n } from "src/i18n";
import type { DetailProps } from "../types";


type Props = DetailProps & {
  variant?: 'blue' | 'dark' | 'orange' | 'pink';
}
 
const { isOpen, category, features, variant } = Astro.props;

const { lang } = Astro.params as { lang: string };

const i18n = getI18n({ currentLocale: lang });
const tShared = i18n.default.shared;

let popularVariant = 'border-secondary bg-secondary/10';

switch (variant) {
  case 'blue':
    popularVariant = 'border-secondary bg-secondary/10';
    break;
  case 'dark':
    popularVariant = 'border-primary border-primary/10';
    break;
  case 'orange':
    popularVariant = 'border-amber-400 bg-amber-400/10';
    break;
  case 'pink':
    popularVariant = 'border-fuchsia-600 bg-red-400/10';
    break;
  default:
    break;
}

---

<details open={isOpen} class="group">
  <summary class="px-4 cursor-pointer text-lg font-medium marker: flex items-center gap-5">
    <ChevronRight
      class={cn(
        "transform transition-transform group-open:rotate-90",
        
      )}
      aria-hidden="true"
    />
    <h3>{category}</h3>
  </summary>
  <span class="h-[2px] block w-full bg-black mb-4 mt-1"></span>
  {
    features.map((feature) => (
      <div class="grid gap-4 grid-cols-1 sm:grid-cols-5">
        <p class="py-4 px-4">{feature.title}</p>
        {feature.columns.map((column, i) => (
          <div
            class={cn(
              "bg-gray-50 border-gray-200/80 px-6 py-4 text-sm text-center w-full grid place-items-center border-x",
              {
                [popularVariant]:
                  i === Astro.props.popularColumn,
              },
            )}
          >
            {column.type === "text" && <span>{column.title}</span>}
            {column.type === "icon" && (
              <span aria-label={column.included ? tShared.included : tShared.not_included}>
                {column.included ? (
                  <CheckCircle
                    aria-hidden="true"
                    class="text-green-600 size-6"
                  />
                ) : (
                  <XCircle aria-hidden="true" class="text-gray-700 size-6" />
                )}
              </span>
              <p class="text-gray-700 text-xs mt-1 min-h-[16px]">{column.note}</p>
            )}
          </div>
        ))}
      </div>
    ))
  }
</details>
