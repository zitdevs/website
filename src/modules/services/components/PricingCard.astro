---
import Button from "src/components/button/Button.astro";
import Card from "src/components/card/Card.astro";
import CardContent from "src/components/card/CardContent.astro";
import CardFooter from "src/components/card/CardFooter.astro";
import CardHeader from "src/components/card/CardHeader.astro";
import { cn, formatNumber } from "src/lib/utils";
import FeatureItems from "./FeatureItems.astro";

type PlanData = {
  name: string;
  price: number;
  priceFrequency?: string;
  monthlyPrice?: number;
  description: string;
  features?: string[];
  startingAt?: boolean;
  cta?: {
    text: string;
    href: string;
  };
};

type Props = {
  plan: PlanData;
  mostPopular?: boolean;
  class?: string;
  classes?: {
    header?: string;
    title?: string;
    feature?: string;
    button?: string;
    footer?: string;
    price?: string;
  };
};

const { plan, mostPopular, classes, ...props } = Astro.props;
---

<Card
  className={cn("bg-gray-50 border-gray-200/80", props.class, {
    "border-secondary bg-secondary/10": mostPopular,
    "rounded-none rounded-t-xl border-b-0": !plan.features,
    "shadow-xl": !!plan.features,
  })}
>
  <CardHeader className="space-y-4">
    <div class={cn(classes?.header)}>
      <h2
        class={cn("text-2xl font-bold", classes?.title)}
        set:html={plan.name}
      />
      <p class="text-gray-700 text-sm mb-">{plan.description}</p>
    </div>
    <div class="flex items-center justify-between text-secondary">
      <div class="">
        {
          plan.startingAt ? (
            <p class="text-sm">Starting at</p>
          ) : (
            <span class="h-[20px] block" />
          )
        }
        <p class={cn("text-3xl font-semibold", classes?.price)}>
          ${formatNumber(plan.price)}
          <span class="text-base font-normal">
            {plan.priceFrequency ? `/${plan.priceFrequency}` : ""}
          </span>
        </p>
      </div>
      {
        plan.monthlyPrice && (
          <p class="text-sm text-gray-500">+ ${plan.monthlyPrice}/Monthly</p>
        )
      }
    </div>
  </CardHeader>

  {
    plan.features && (
      <CardContent>
        <ul class={cn(classes?.feature)}>
          {plan.features.map((feature, index) => (
            <FeatureItems key={index}>{feature}</FeatureItems>
          ))}
        </ul>
      </CardContent>
    )
  }

  <CardFooter className={cn("grid place-items-center gap-2", classes?.footer)}>
    <Button
      className={cn("w-full", classes?.button)}
      variant={mostPopular ? "secondary" : "outline"}
      href={plan.cta?.href}
    >
      {plan.cta?.text || "Get Started"}
    </Button>
  </CardFooter>
</Card>
